{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../rehype-img-size.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport highlight from 'rehype-highlight';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport rehypeImgSize from './rehype-img-size';\n// import MDXComponents from './src/components/atom/MDXcomponent/MDXComponent'\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeSlug from 'rehype-slug';\nimport remarkGfm from 'remark-gfm';\n\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `**/*.mdx`, // mdx \uD30C\uC77C\uACBD\uB85C \uD328\uD134\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      required: true,\n    },\n    date: {\n      type : 'date',\n      required: true,\n    },\n    thumbnail: {\n      type: 'string',\n      required: false,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      required: true,\n    },\n  },\n}));\n\nconst rehypeOptions = {\n  theme: 'slack-dark',\n  keepBackground: true,\n};\n\nconst contentSource = makeSource({\n  contentDirPath: 'posts',\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [],\n    rehypePlugins: [\n      [\n        rehypePrettyCode,\n        {\n          theme: 'github-dark', // \uCF54\uB4DC \uC791\uC131 \uC2DC \uC801\uC6A9\uD560 \uD14C\uB9C8\n        },\n      ],\n      rehypeImgSize,\n      rehypeSlug,\n      [\n        rehypeAutolinkHeadings,\n        {\n          behavior: 'wrap',\n        },\n      ],\n    ],\n  },\n});\n\nexport default contentSource;\n", "import { visit } from 'unist-util-visit';\nimport sizeOf from 'image-size';\nimport fs from 'fs';\nimport path from 'path';\n\nconst rehypeImgSize = () => {\n  return (tree: any) => {\n    visit(tree, 'element', (node) => {\n      if (node.tagName === 'img' && node.properties.src) {\n        const imgPath = path.join(process.cwd(), 'public', node.properties.src);\n        if (fs.existsSync(imgPath)) {\n          const dimensions = sizeOf(imgPath);\n          if (dimensions.width && dimensions.height && dimensions.width*0.8 >= dimensions.height) {\n            node.properties.width = '100%';\n          } else {\n            // node.properties.width = '80%';\n            node.properties.height = dimensions.height;\n          }\n        }\n      }\n    });\n  };\n};\n\nexport default rehypeImgSize;"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAE/C,OAAO,sBAAsB;;;ACF7B,SAAS,aAAa;AACtB,OAAO,YAAY;AACnB,OAAO,QAAQ;AACf,OAAO,UAAU;AAEjB,IAAM,gBAAgB,MAAM;AAC1B,SAAO,CAAC,SAAc;AACpB,UAAM,MAAM,WAAW,CAAC,SAAS;AAC/B,UAAI,KAAK,YAAY,SAAS,KAAK,WAAW,KAAK;AACjD,cAAM,UAAU,KAAK,KAAK,QAAQ,IAAI,GAAG,UAAU,KAAK,WAAW,GAAG;AACtE,YAAI,GAAG,WAAW,OAAO,GAAG;AAC1B,gBAAM,aAAa,OAAO,OAAO;AACjC,cAAI,WAAW,SAAS,WAAW,UAAU,WAAW,QAAM,OAAO,WAAW,QAAQ;AACtF,iBAAK,WAAW,QAAQ;AAAA,UAC1B,OAAO;AAEL,iBAAK,WAAW,SAAS,WAAW;AAAA,UACtC;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,IAAO,0BAAQ;;;ADnBf,OAAO,4BAA4B;AACnC,OAAO,gBAAgB;AAIhB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAOF,IAAM,gBAAgB,WAAW;AAAA,EAC/B,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC;AAAA,IAChB,eAAe;AAAA,MACb;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
