{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../rehype-img-size.ts", "../../../src/components/atom/MDXcomponent/MDXComponent.tsx", "../../../src/components/atom/MDXcomponent/MDXComponent.css.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport highlight from 'rehype-highlight';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport rehypeImgSize from './rehype-img-size';\nimport MDXComponents from './src/components/atom/MDXcomponent/MDXComponent'\n\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `**/*.mdx`, // mdx \uD30C\uC77C\uACBD\uB85C \uD328\uD134\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      required: true,\n    },\n    date: {\n      type : 'date',\n      required: true,\n    },\n    thumbnail: {\n      type: 'string',\n      required: false,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      required: true,\n    },\n  },\n}));\n\nconst rehypeOptions = {\n  theme: 'slack-dark',\n  keepBackground: true,\n};\n\nconst contentSource = makeSource({\n  contentDirPath: 'posts',\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [],\n    rehypePlugins: [\n      [\n        rehypePrettyCode,\n        {\n          theme: 'github-dark', // \uCF54\uB4DC\uC791\uC131\uC2DC \uC801\uC6A9\uD560 \uD14C\uB9C8\n        },\n      ],\n      rehypeImgSize,\n    ],\n    components: MDXComponents,\n  },\n});\n\nexport default contentSource;\n", "import { visit } from 'unist-util-visit';\nimport sizeOf from 'image-size';\nimport fs from 'fs';\nimport path from 'path';\n\nconst rehypeImgSize = () => {\n  return (tree: any) => {\n    visit(tree, 'element', (node) => {\n      if (node.tagName === 'img' && node.properties.src) {\n        const imgPath = path.join(process.cwd(), 'public', node.properties.src);\n        if (fs.existsSync(imgPath)) {\n          const dimensions = sizeOf(imgPath);\n          if (dimensions.width && dimensions.height && dimensions.width*0.8 >= dimensions.height) {\n            node.properties.width = '100%';\n          } else {\n            // node.properties.width = '80%';\n            node.properties.height = dimensions.height;\n          }\n        }\n      }\n    });\n  };\n};\n\nexport default rehypeImgSize;", "// components/MDXComponent.tsx\nimport React from 'react';\nimport { preStyle, codeTitleStyle, codeTitleNextPreStyle, codeStyle } from './MDXComponent.css';\n\n// Props \uD0C0\uC785 \uC815\uC758\ntype PreProps = React.ComponentPropsWithoutRef<'pre'>;\ntype CodeProps = React.ComponentPropsWithoutRef<'code'>;\ntype FigcaptionProps = React.ComponentPropsWithoutRef<'figcaption'>;\n\nconst MDXComponents = {\n  pre: (props : PreProps) => <pre className={preStyle} {...props} />,\n  code: (props : CodeProps) => <code className={codeStyle} {...props} />,\n  figcaption: (props : FigcaptionProps) => <figcaption className={codeTitleStyle} {...props} />,\n};\n\nexport default MDXComponents;\n", "import { style, fontFace } from '@vanilla-extract/css';\nimport { vars } from '@/styles/globalTheme.css';\n\nconst Hack = fontFace({\n  src: 'url(\"/fonts/Hack-Regular.ttf\")',\n})\n\n\nexport const preStyle = style({\n  overflowX: 'auto',\n  padding: '1rem 0',\n  border: '1px solid #8b8b8b',\n  marginTop: '0',\n});\n\nexport const codeTitleStyle = style({\n  fontSize: '0.9rem',\n  fontWeight: 500,\n  padding: '0.4rem 1rem',\n  border: '1px solid #8b8b8b',\n  borderTopLeftRadius: '0.4rem',\n  borderTopRightRadius: '0.4rem',\n  borderBottomStyle: 'none',\n});\n\nexport const codeTitleNextPreStyle = style({\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n});\n\nexport const codeStyle = style({\n  fontFamily: Hack,\n  fontSize: '0.9rem',\n  lineHeight: 1.5,\n  padding: '0.2rem 1rem',\n  borderRadius: '0.2rem',\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAE/C,OAAO,sBAAsB;;;ACF7B,SAAS,aAAa;AACtB,OAAO,YAAY;AACnB,OAAO,QAAQ;AACf,OAAO,UAAU;AAEjB,IAAM,gBAAgB,MAAM;AAC1B,SAAO,CAAC,SAAc;AACpB,UAAM,MAAM,WAAW,CAAC,SAAS;AAC/B,UAAI,KAAK,YAAY,SAAS,KAAK,WAAW,KAAK;AACjD,cAAM,UAAU,KAAK,KAAK,QAAQ,IAAI,GAAG,UAAU,KAAK,WAAW,GAAG;AACtE,YAAI,GAAG,WAAW,OAAO,GAAG;AAC1B,gBAAM,aAAa,OAAO,OAAO;AACjC,cAAI,WAAW,SAAS,WAAW,UAAU,WAAW,QAAM,OAAO,WAAW,QAAQ;AACtF,iBAAK,WAAW,QAAQ;AAAA,UAC1B,OAAO;AAEL,iBAAK,WAAW,SAAS,WAAW;AAAA,UACtC;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,IAAO,0BAAQ;;;ACvBf,OAAO,WAAW;;;ACDlB,SAAS,OAAO,gBAAgB;AAGhC,IAAM,OAAO,SAAS;AAAA,EACpB,KAAK;AACP,CAAC;AAGM,IAAM,WAAW,MAAM;AAAA,EAC5B,WAAW;AAAA,EACX,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,WAAW;AACb,CAAC;AAEM,IAAM,iBAAiB,MAAM;AAAA,EAClC,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,qBAAqB;AAAA,EACrB,sBAAsB;AAAA,EACtB,mBAAmB;AACrB,CAAC;AAEM,IAAM,wBAAwB,MAAM;AAAA,EACzC,qBAAqB;AAAA,EACrB,sBAAsB;AACxB,CAAC;AAEM,IAAM,YAAY,MAAM;AAAA,EAC7B,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,cAAc;AAChB,CAAC;;;AD3BD,IAAM,gBAAgB;AAAA,EACpB,KAAK,CAAC,UAAqB,oCAAC,SAAI,WAAW,UAAW,GAAG,OAAO;AAAA,EAChE,MAAM,CAAC,UAAsB,oCAAC,UAAK,WAAW,WAAY,GAAG,OAAO;AAAA,EACpE,YAAY,CAAC,UAA4B,oCAAC,gBAAW,WAAW,gBAAiB,GAAG,OAAO;AAC7F;AAEA,IAAO,uBAAQ;;;AFRR,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAOF,IAAM,gBAAgB,WAAW;AAAA,EAC/B,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC;AAAA,IAChB,eAAe;AAAA,MACb;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAAA,IACA,YAAY;AAAA,EACd;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
